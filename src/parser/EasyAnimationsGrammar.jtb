/**
 * JTB template file created by SF JavaCC plugin 1.5.17+ wizard for JTB 1.4.0.2+ and JavaCC 1.5.0+
 */options{  JDK_VERSION = "1.5";  static = true;  JTB_P = "parser";
}PARSER_BEGIN(EasyAnimParser)package parser;
// this import is not needed as it is generated by JTB
// import parser.syntaxtree.*;
// this import is needed as it is not generated by JTB
import parser.visitor.*;
import java.io.FileInputStream;

public class EasyAnimParser{  public static void main(String args [])  {    System.out.println("Reading Animation...");    try    {
      FileInputStream fin = new FileInputStream(".\\src\\animation.txt");
      EasyAnimParser parser =  new EasyAnimParser(fin);      Animation animation = EasyAnimParser.Animation();      DepthFirstVoidVisitor v = new MyVisitor();      animation.accept(v);
          }    catch (Exception e)    {      System.out.println("Oops.");      System.out.println(e.getMessage());    }  }}class MyVisitor extends DepthFirstVoidVisitor{  public void visit(NodeToken n)  {    System.out.println("visit " + n.tokenImage);  }}PARSER_END(EasyAnimParser)void Animation() :
{
}
{
  "Animation" AnimationName() AnimationDef()
}

void AnimationDef() :
{}
{
    "Duration:" Duration()  ( "SubAnimations" <LPAR > (SubAnimation() )+ < RPAR >)? "Poses" < LPAR > (Pose() )+ <RPAR > (";" |< EOF >)}

void SubAnimation() :
{
}
{
  "Add" "Animation" AnimationName() "at" "frame" Frame() AnimationDef()
}

void Pose() :
{
}
{
  "Add" "Pose" PoseName() "at" "frame" Frame() PoseDef()
}

void PoseDef() :
{
}
{
  < LPAR > (BoneName() BoneDef())+ < RPAR >
}

void BoneName() :
{}
{
  ("HEAD:"
| "CHEST:"
| "R SHOULDER:"
| "L SHOULDER:"
| "UPPER R ARM:"
| "LOWER R ARM:"
| "UPPER L ARM:"
| "LOWER L ARM:"
| "R HIP:"
| "L HIP:"
| "UPPER R LEG:"
| "LOWER R LEG:"
| "UPPER L LEG:"
| "LOWER L LEG:")}

void BoneDef() :
{}
{
  Position()","Position()
}

void Frame() :
{
}
{
  < NUM >
}

void Position() :
{
}
{
  "("< FLOAT > "," < FLOAT > "," < FLOAT >")"
}

void AnimationName() :
{
}
{
  (< STRING >)+
}

void PoseName() :
{}
{
  (< STRING >)+}

void Duration() :
{}
{
  < NUM > "frames"}

TOKEN :
{
  < NUM : "0" | [ "1"-"9" ] ([ "0"-"9" ])* >
| < FLOAT : [ "0"-"9" ] ([ "0"-"9" ])* ("." [ "0"-"9" ] ([ "0"-"9" ])*)? >
}

TOKEN : /* LANGUAGE TOKENS */
{
    < LPAR : "{" >
|   < RPAR : "}" >
|	< STRING : ( ["a"-"z","A"-"Z","\'","_",".","!","?","(",")","0"-"9","\u00e0","\u00F2","\u00F9","\u00E8","\u00E9","\u00EC"] )+>
} 

SKIP :
{
  " "
| "\t"
| "\n"
| "\r"
| < "//" (~[ "\n", "\r" ])*
    (
      "\n"
    | "\r"
    | "\r\n"
    ) >
| < "/*" (~[ "*" ])* "*"
    (
      ~[ "/" ] (~[ "*" ])* "*"
    )*
    "/" >
}